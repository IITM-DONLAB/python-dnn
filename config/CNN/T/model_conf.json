{	
	"comment" : "nnetType :: (Mandatory) specify Type of Network (CNN,RBM) ",
	"nnetType" : "CNN",

	"comment" : "train_data :: (Mandatory) specify the working directory containing data configuration and output ",
	"wdir" : "wdir",

	"comment" : "valid_data (Mandatory) specify the path of the validation data relative to the working directory",
	"data_spec" : "config/CNN/T/data_spec.json",
		
	"comment" : "nnet_spec :: (Mandatory) specify the path of convolution network configuration specification relative to working directory",
	"nnet_spec" : "config/CNN/T/nnet_spec.json",

	"comment" : "hidden_output_file :: (Mandatory) specify the path of convolution network output file relative to working directory",
	"hidden_output_file" : "hidden_out.model",
	
	"comment" : "conv_output_file :: (Mandatory) specify the path of convolution network output file relative to working directory",
	"conv_output_file" : "conv_out.model",
	
	"comment" : "input_shape :: (Mandatory) specify the input shape of a given feature vector" ,
	"input_shape" : [1,10,5],
	
	"comment" : "batch_size :: specify the mini batch size while training, default 256",
	"batch_size" : 8,

	"comment" : "momentum ::  Specify the momentum factor while training default 0.5",
	"momentum" : 0.5,

	"comment" : "n_outs :: Specify the number of outputs",
	"n_outs" : 8,
	
	"comment" : "l_rate_method :: Two method l_rate method are supported  C: Constant learning rate and E : Exponential decay",
	"l_rate_method" : "C",	
	
	"comment" : "l_rate :: learning rate configuration",
	"l_rate" : {	
			"learning_rate" : 0.08,
			"epoch_num" : 10,

			"start_rate" : 0.08,
			"scale_by" : 0.5,
			"min_derror_decay_start" : 0.05,
			"min_derror_stop" : 0.05,
			"min_epoch_decay_start" : 15,
			"init_error" :100
	},
	"export_path" : "data/export"
}
